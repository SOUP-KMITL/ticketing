worker_processes auto;
daemon off;

pid pids/nginx.pid;
error_log logs/error.log notice;

worker_rlimit_nofile 65536;

events {
    worker_connections 16384;
    multi_accept on;
}

http {
    include 'nginx-kong.conf';
    server {
        listen 80;
        listen [::]:80;
        server_name api.smartcity.kmitl.io , developers.smartcity.kmitl.io; 
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name api.smartcity.kmitl.io,developers.smartcity.kmitl.io;
        ssl_certificate /cert/fullchain.pem;
        ssl_certificate_key /cert/privkey.pem;
        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers         HIGH:!aNULL:!MD5;
        location / {
            set $upstream_host               '';
            set $upstream_upgrade            '';
            set $upstream_connection         '';
            set $upstream_scheme             '';
            set $upstream_uri                '';
            set $upstream_x_forwarded_for    '';
            set $upstream_x_forwarded_proto  '';
            set $upstream_x_forwarded_host   '';
            set $upstream_x_forwarded_port   '';

            rewrite_by_lua_block {
                kong.rewrite()
            }

            access_by_lua_block {
                kong.access()
            }

            proxy_http_version 1.1;
            proxy_set_header   Host              $upstream_host;
            proxy_set_header   Upgrade           $upstream_upgrade;
            proxy_set_header   Connection        $upstream_connection;
            proxy_set_header   X-Forwarded-For   $upstream_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $upstream_x_forwarded_proto;
            proxy_set_header   X-Forwarded-Host  $upstream_x_forwarded_host;
            proxy_set_header   X-Forwarded-Port  $upstream_x_forwarded_port;
            proxy_set_header   X-Real-IP         $remote_addr;
            proxy_pass_header  Server;
            proxy_pass_header  Date;
            proxy_ssl_name     $upstream_host;
            proxy_pass         $upstream_scheme://kong_upstream$upstream_uri;

            header_filter_by_lua_block {
                kong.header_filter()
            }

            body_filter_by_lua_block {
                kong.body_filter()
            }

            log_by_lua_block {
                kong.log()
            }
        }
    }
}
