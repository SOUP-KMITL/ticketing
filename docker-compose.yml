version: '3.3'
services: 
  user-service:
    image: worker-01:5000/user-service
    build: ./user
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure

  meter-service:
    image: worker-01:5000/meter-service
    build: ./meter
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure

  collection-service:
    image: worker-01:5000/collection-service
    build: ./collection
    volumes:
      - '/pool-data/key:/key'
      # - '/Users/athiyutratchatajaroenchaikul/Desktop/key:/key'
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure

  access-control-service:
    image: worker-01:5000/access-control-service
    build: ./access-control
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure

  ticket-service:
    image: worker-01:5000/ticket-service
    build: ./ticket
    volumes:
      - '/pool-data/key:/key'
      # - '/Users/athiyutratchatajaroenchaikul/Desktop/key:/key'
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
  kong:
    # image: worker-01:5000/kong
    image: kong
    # build: ./kong
    privileged: true
    tty: true
    depends_on:
      - kong-database
    ports:
      - '8080:8000'
      - '443:443'
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
    # volumes: 
    #   - '/pool-data/letsencrypt/etc/letsencrypt:/etc/letsencrypt'

  kong-dashboard:
    image: 'pgbi/kong-dashboard:v2'
    depends_on:
      - kong
    ports:
      - '8081:8080'

  neo4j:
    image: neo4j
    environment:
      - NEO4J_AUTH=none
    ports:
      - "7474:7474"
      - "7687:7687"

  mongo:
    image: mongo

  kong-database:
    image: 'postgres:9.4'
    environment:
      - POSTGRES_USER=kong
      - POSTGRES_DB=kong
    volumes:
      - '/pool-data/kong-data:/var/lib/postgresql/data'
      # - '/Users/athiyutratchatajaroenchaikul/Desktop/ticketing/kong-data:/var/lib/postgresql/data'
      
  swagger:
    image: worker-01:5000/swagger
    build: ./swagger
    environment:
      - SWAGGER_JSON=/doc/data-exchange/data-exchage-swagger.json
    
    